// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: account.sql

package database

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createAccount = `-- name: CreateAccount :one
INSERT INTO accounts(email, password)
VALUES ($1, $2)
RETURNING id
`

type CreateAccountParams struct {
	Email    string
	Password string
}

func (q *Queries) CreateAccount(ctx context.Context, arg CreateAccountParams) (pgtype.UUID, error) {
	row := q.db.QueryRow(ctx, createAccount, arg.Email, arg.Password)
	var id pgtype.UUID
	err := row.Scan(&id)
	return id, err
}

const getAccountByEmail = `-- name: GetAccountByEmail :one
SELECT (id, password)
FROM accounts
WHERE email = $1
`

func (q *Queries) GetAccountByEmail(ctx context.Context, email string) (interface{}, error) {
	row := q.db.QueryRow(ctx, getAccountByEmail, email)
	var column_1 interface{}
	err := row.Scan(&column_1)
	return column_1, err
}
